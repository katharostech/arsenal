---
#
# Documentation
#

kind: pipeline
name: book
  
steps:
  - name: test
    image: hrektts/mdbook
    commands:
      - mdbook test

  - name: build
    image: hrektts/mdbook
    commands:
      - mdbook build
    
  - name: publish
    image: plugins/gh-pages
    settings:
      pages_directory: build/book
      username:
        from_secret: github_username
      password:
        from_secret: github_access_key
    when:
      event:
        - push
      branch:
        - master

trigger:
  include:
    event:
      - pull_request
      - push
      - tag
  ref:
    - refs/tags/release-draft
    - refs/heads/master

---
kind: pipeline
name: arsenal-linux

steps:
  
  # Build Python Extension for Linux
  - name: build-arsenal
    image: rustlang/rust:nightly
    depends_on:
      - clone
    commands:
      - cargo build --release

  # Build Arsenal runtime for Linux
  - name: build-arsenal-runtime
    image: rust:latest
    depends_on:
      - clone
    commands:
      - apt-get update
      - >
        apt-get install -y gcc pkg-config openssl libasound2-dev cmake
        build-essential python3 libfreetype6-dev libexpat1-dev
        libxcb-composite0-dev libssl-dev
      - cd arsenal-runtime
      - cargo build --release

  # Package Linux distrobution
  - name: package-arsenal-plugin
    image: rust:latest
    depends_on:
      - build-arsenal
      - build-arsenal-runtime
    commands:
      - mkdir -p build/
      - cp -r arsenal-blender build/arsenal-blender-linux
      - mkdir -p build/arsenal-blender-linux/bin
      - mv target/release/libarsenal.so build/arsenal-blender-linux/arsenal.so
      - mv arsenal-runtime/target/release/arsenal-runtime build/arsenal-blender-linux/bin/arsenal-runtime
      - cd build
      - tar -czf arsenal-blender-linux.tgz arsenal-blender-linux

trigger:
  include:
    event:
      - pull_request
      - push
      - tag
  ref:
    - refs/tags/release-draft
    - refs/heads/master

---
kind: pipeline
name: arsenal-windows

steps:

  # Build Python Extension for Windows
  - name: build-arsenal
    image: rustlang/rust:nightly
    depends_on:
      - clone
    commands:
      # Install Cross-compiler toolchain
      - apt-get update
      - apt-get install -y gcc-mingw-w64
      - rustup target install x86_64-pc-windows-gnu
      # Download Python headers and Windows build
      - mkdir -p /build
      - cd /build
      # Python windows build
      - wget https://www.python.org/ftp/python/3.5.3/python-3.5.3-embed-amd64.zip
      - mkdir /build/python-win
      - ln -s /build/python-win/python35.dll /build/python-win/libpythonXY.dll
      - cd /build/python-win
      - unzip /build/*.zip
      - cd /build
      # Python headers from source
      - git clone --depth 1 --branch 3.5 https://github.com/python/cpython.git
      - cp cpython/PC/pyconfig.h cpython/Include/pyconfig.h
      - echo '#define Py_ENABLE_SHARED 0' >> cpython/Include/pyconfig.h
      - echo '#define WITH_THREAD 1' >> cpython/Include/pyconfig.h
      # Configure build to use Windows linker and libraries
      - export PYO3_CROSS_INCLUDE_DIR=/build/cpython/Include
      - export PYO3_CROSS_LIB_DIR=/build/python-win
      - echo 'fn main() { println!("cargo:rustc-link-search=/build/python-win"); }' > /drone/src/build.rs
      - mkdir -p /drone/src/.cargo
      - |
        echo '[target.x86_64-pc-windows-gnu]
        linker = "x86_64-w64-mingw32-gcc"' >> /drone/src/.cargo/config
      # Compile project
      - cd /drone/src
      - cargo build --target x86_64-pc-windows-gnu --release

  # Build Arsenal runtime for Windows
  - name: build-arsenal-runtime
    image: rust:latest
    depends_on:
      - clone
    commands:
      - apt-get update
      - >
        apt-get install -y gcc gcc-mingw-w64 pkg-config openssl libasound2-dev
        cmake build-essential python3 libfreetype6-dev libexpat1-dev
        libxcb-composite0-dev libssl-dev
      - rustup target install x86_64-pc-windows-gnu
      - cd arsenal-runtime
      - mkdir -p .cargo
      - |
        echo '[target.x86_64-pc-windows-gnu]
        linker = "x86_64-w64-mingw32-gcc"' >> .cargo/config
      - cargo build --target x86_64-pc-windows-gnu --release

  # Package Windows distrobution
  - name: package-arsenal-plugin
    image: rust:latest
    depends_on:
      - build-arsenal
      - build-arsenal-runtime
    commands:
      - mkdir -p build/
      - apt-get update
      - apt-get install -y zip
      - cp -r arsenal-blender build/arsenal-blender-windows
      - mkdir -p build/arsenal-blender-windows/bin
      - mv target/x86_64-pc-windows-gnu/release/arsenal.dll build/arsenal-blender-windows/arsenal.dll
      - mv arsenal-runtime/target/x86_64-pc-windows-gnu/release/arsenal-runtime.exe build/arsenal-blender-windows/bin/arsenal-runtime
      - cd build
      - zip -r arsenal-blender-windows.zip arsenal-blender-windows

  # Publish draft to GitHub releases
  - name: publish-draft
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-windows.zip
      title: test-release
      draft: true
      checksum:
        - sha256
        - md5
    when:
      ref:
        - refs/tags/release-draft

trigger:
  event:
    include:
      - pull_request
      - push
      - tag
  ref:
    - refs/tags/release-draft
    - refs/heads/master
