---
kind: pipeline
name: book
  
steps:
  - name: test
    image: hrektts/mdbook
    commands:
      - cd docs/arsenal_book
      - mdbook test

  - name: build
    image: hrektts/mdbook
    commands:
      - cd docs/arsenal_book
      - mdbook build
    
  - name: publish
    image: plugins/gh-pages
    settings:
      pages_directory: docs/arsenal_book/build
      username:
        from_secret: github_username
      password:
        from_secret: github_access_key
    when:
      event:
        - push
      branch:
        - master

trigger:
  branch:
    exclude:
      - feature/*
      - dependabot/*

---
kind: pipeline
name: arsenal-linux

steps:
  
  # Build Python Extension for Linux
  - name: build-arsenal-blender-core
    image: rustlang/rust:nightly
    pull: always
    depends_on:
      - clone
    commands:
      # Build Python 3.7 from source
      - mkdir -p /build
      - cd /build
      - wget https://github.com/python/cpython/archive/v3.7.0.tar.gz
      - tar -xf v3.7.0.tar.gz
      - cd cpython-3.7.0
      - ./configure
      - make -j$(nproc)
      - make install
      # Compile Arsenal plugin
      - cd /drone/src/arsenal_blender_core
      - cargo build --release

  # Build Arsenal runtime for Linux
  - name: build-arsenal-runtime
    image: rust:1.35
    depends_on:
      - clone
    commands:
      - apt-get update
      - >
        apt-get install -y gcc pkg-config openssl libasound2-dev cmake
        build-essential python3 libfreetype6-dev libexpat1-dev
        libxcb-composite0-dev libssl-dev
      - cd arsenal_runtime
      - cargo build --release

  # Package Linux distribution
  - name: package-arsenal-plugin
    image: rust:1.35
    depends_on:
      - build-arsenal-blender-core
      - build-arsenal-runtime
    commands:
      - mkdir -p build/
      - apt-get update
      - apt-get install -y zip
      - cp -r arsenal_blender build/arsenal_blender
      - mkdir -p build/arsenal_blender/bin
      - mv arsenal_blender_core/target/release/libcore.so build/arsenal_blender/core.so
      - mv arsenal_runtime/target/release/arsenal_runtime build/arsenal_blender/bin/arsenal_runtime
      - cd build
      - zip -r arsenal-blender-linux-x86_64.zip arsenal_blender

  # Publish draft to GitHub releases
  - name: publish-draft
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      title: release-draft-linux
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-linux-x86_64.zip
      draft: true
    when:
      ref:
        - refs/tags/release-draft

  # Publish release to GitHub releases
  - name: publish-release
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-linux-x86_64.zip
    when:
      ref:
        - refs/tags/v*

trigger:
  branch:
    exclude:
      - feature/*
      - dependabot/*

---
kind: pipeline
name: arsenal-windows

steps:

  # Build Python Extension for Windows
  - name: build-arsenal-blender-core
    image: rustlang/rust:nightly
    pull: always
    depends_on:
      - clone
    commands:
      # Install Cross-compiler toolchain
      - apt-get update
      - apt-get install -y gcc-mingw-w64
      - rustup target install x86_64-pc-windows-gnu
      # Download Python headers and Windows build
      - mkdir -p /build
      - cd /build
      - wget https://www.python.org/ftp/python/3.7.0/python-3.7.0-embed-amd64.zip
      - mkdir /build/python-win
      - cd /build/python-win
      - unzip /build/*.zip
      - ln -s /build/python-win/python37.dll /build/python-win/libpythonXY.dll
      - cd /build
      # Get pyconfig.h from Python source
      - git clone --depth 1 --branch 3.7 https://github.com/python/cpython.git
      - cp cpython/PC/pyconfig.h cpython/Include/pyconfig.h
      - echo '#define Py_ENABLE_SHARED 0' >> cpython/Include/pyconfig.h
      - echo '#define WITH_THREAD 1' >> cpython/Include/pyconfig.h
      # Configure build to use Windows linker and libraries
      - export PYO3_CROSS_INCLUDE_DIR=/build/cpython/Include
      - export PYO3_CROSS_LIB_DIR=/build/python-win
      - cd /drone/src/arsenal_blender_core
      - echo 'fn main() { println!("cargo:rustc-link-search=/build/python-win"); }' > build.rs
      - rm -rf .cargo # Remove any existing build config as we will creating our own here
      - mkdir -p .cargo
      - |
        echo '[target.x86_64-pc-windows-gnu]
        linker = "x86_64-w64-mingw32-gcc"' >> .cargo/config
      # Compile project
      - cargo build --target x86_64-pc-windows-gnu --release

  # Build Arsenal runtime for Windows
  - name: build-arsenal-runtime
    image: rust:1.35
    depends_on:
      - clone
    commands:
      - apt-get update
      - >
        apt-get install -y gcc gcc-mingw-w64 pkg-config openssl libasound2-dev
        cmake build-essential python3 libfreetype6-dev libexpat1-dev
        libxcb-composite0-dev libssl-dev
      - rustup target install x86_64-pc-windows-gnu
      - cd arsenal_runtime
      - rm -rf .cargo # Remove any existing build config as we will creating our own here
      - mkdir -p .cargo
      - |
        echo '[target.x86_64-pc-windows-gnu]
        linker = "x86_64-w64-mingw32-gcc"' >> .cargo/config
      - cargo build --target x86_64-pc-windows-gnu --release

  # Package Windows distribution
  - name: package-arsenal-plugin
    image: rust:1.35
    depends_on:
      - build-arsenal-blender-core
      - build-arsenal-runtime
    commands:
      - mkdir -p build/
      - apt-get update
      - apt-get install -y zip
      - cp -r arsenal_blender build/arsenal_blender
      - mkdir -p build/arsenal_blender/bin
      - mv arsenal_blender_core/target/x86_64-pc-windows-gnu/release/core.dll build/arsenal_blender/core.pyd
      - mv arsenal_runtime/target/x86_64-pc-windows-gnu/release/arsenal_runtime.exe build/arsenal_blender/bin/arsenal_runtime
      - cd build
      - zip -r arsenal-blender-windows-x86_64.zip arsenal_blender

  # Publish draft to GitHub releases
  - name: publish-draft
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      title: release-draft-windows
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-windows-x86_64.zip
      draft: true
    when:
      ref:
        - refs/tags/release-draft

  # Publish release to GitHub releases
  - name: publish-release
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-windows-x86_64.zip
    when:
      ref:
        - refs/tags/v*

trigger:
  branch:
    exclude:
      - feature/*      
      - dependabot/*

---
kind: pipeline
name: arsenal-mac

steps:

  # Build Python Extension for Mac
  - name: build-arsenal
    image: rustlang/rust:nightly
    pull: always
    depends_on:
      - clone
    commands:
      # Install Cross-compiler toolchain
      - apt-get update
      - apt-get install -y clang cmake cpio make libssl-dev lzma-dev libxml2-dev
      - rustup target add x86_64-apple-darwin
      - mkdir -p /build
      - cd /build
      - git clone --depth 1 https://github.com/tpoechtrager/osxcross.git
      - cd /build/osxcross/tarballs
      - wget https://s3.dockerproject.org/darwin/v2/MacOSX10.11.sdk.tar.xz
      - cd /build/osxcross
      - UNATTENDED=yes OSX_VERSION_MIN=10.7 ./build.sh
      - export PATH="$PATH:/build/osxcross/target/bin"
      - ln -s /build/osxcross/target/SDK/MacOSX10.11.sdk/System/ /System
      # Install 7Zip for unziping the mac Python .pkg
      - cd /build
      - git clone https://github.com/tpoechtrager/p7zip.git
      - cd /build/p7zip
      - make 7z -j$(nproc)
      - make install
      # Download Python headers and Mac build of Python
      - mkdir /build/python-mac
      - cd /build/python-mac
      - wget https://www.python.org/ftp/python/3.7.0/python-3.7.0-macosx10.6.pkg
      - 7z x python-3.7.0-macosx10.6.pkg
      - cpio -i < Payload~
      - echo '#define Py_ENABLE_SHARED 0' >> /build/python-mac/Versions/3.7/Headers/pyconfig.h
      - export PYO3_CROSS_INCLUDE_DIR=/build/python-mac/Versions/3.7/Headers
      - export PYO3_CROSS_LIB_DIR=/build/python-mac/Versions/3.7/lib
      - export CC=x86_64-apple-darwin15-clang
      # Configure build to use Mac linker and libraries
      - cd /drone/src/arsenal_blender_core
      - rm -rf .cargo # Remove any existing build config as we will creating our own here
      - mkdir -p .cargo
      - |
        echo '[target.x86_64-apple-darwin]
        linker = "x86_64-apple-darwin15-clang"
        rustflags = ["-C", "rpath", "-C", "link-arg=-undefined","-C", "link-arg=dynamic_lookup"]' >> .cargo/config
      # Compile arsenal_blender_core
      - cargo build --target x86_64-apple-darwin --release
      # Compile arsenal runtime
      - cd /drone/src/arsenal_runtime
      - rm -rf .cargo # Remove any existing build config as we will creating our own here
      - mkdir -p .cargo
      - |
        echo '[target.x86_64-apple-darwin]
        linker = "x86_64-apple-darwin15-clang"' >> .cargo/config
      - rustup toolchain add stable-2019-05-23
      - rustup default stable-2019-05-23
      - rustup target add x86_64-apple-darwin
      - export COREAUDIO_FRAMEWORKS_PATH='/System/Library/Frameworks'
      - >
        export COREAUDIO_CFLAGS='-I/System/Library/Frameworks/Kernel.framework/Headers
        -I/build/osxcross/target/SDK/MacOSX10.11.sdk/usr/include'
      - cargo build --target x86_64-apple-darwin --release

  # Package Mac distribution
  - name: package-arsenal-plugin
    image: rust:latest
    depends_on:
      - build-arsenal
    commands:
      - mkdir -p build/
      - apt-get update
      - apt-get install -y zip
      - cp -r arsenal_blender build/arsenal_blender
      - mkdir -p build/arsenal_blender/bin
      - mv arsenal_blender_core/target/x86_64-apple-darwin/release/libcore.dylib build/arsenal_blender/core.so
      - mv arsenal_runtime/target/x86_64-apple-darwin/release/arsenal_runtime build/arsenal_blender/bin/arsenal_runtime
      - cd build
      - zip -r arsenal-blender-mac-x86_64.zip arsenal_blender

  # Publish draft to GitHub releases
  - name: publish-draft
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      title: release-draft-mac
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-mac-x86_64.zip
      draft: true
    when:
      ref:
        - refs/tags/release-draft

  # Publish release to GitHub releases
  - name: publish-release
    image: plugins/github-release
    depends_on:
      - package-arsenal-plugin
    settings:
      api_key:
        from_secret: github_access_key
      files:
        - build/arsenal-blender-mac-x86_64.zip
    when:
      ref:
        - refs/tags/v*

trigger:
  branch:
    exclude:
      - feature/*
      - dependabot/*
